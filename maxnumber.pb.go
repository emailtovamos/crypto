// Code generated by protoc-gen-go. DO NOT EDIT.
// source: maxnumber.proto

package maxnumber

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FindMaxNumberRequest struct {
	// int32 number = 1;
	PublicKey            []byte   `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	PrivateKey           []byte   `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	CipherText           []byte   `protobuf:"bytes,4,opt,name=cipher_text,json=cipherText,proto3" json:"cipher_text,omitempty"`
	Signature            []byte   `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMaxNumberRequest) Reset()         { *m = FindMaxNumberRequest{} }
func (m *FindMaxNumberRequest) String() string { return proto.CompactTextString(m) }
func (*FindMaxNumberRequest) ProtoMessage()    {}
func (*FindMaxNumberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f89e07bb98a8bde8, []int{0}
}

func (m *FindMaxNumberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMaxNumberRequest.Unmarshal(m, b)
}
func (m *FindMaxNumberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMaxNumberRequest.Marshal(b, m, deterministic)
}
func (m *FindMaxNumberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMaxNumberRequest.Merge(m, src)
}
func (m *FindMaxNumberRequest) XXX_Size() int {
	return xxx_messageInfo_FindMaxNumberRequest.Size(m)
}
func (m *FindMaxNumberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMaxNumberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindMaxNumberRequest proto.InternalMessageInfo

func (m *FindMaxNumberRequest) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *FindMaxNumberRequest) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

func (m *FindMaxNumberRequest) GetCipherText() []byte {
	if m != nil {
		return m.CipherText
	}
	return nil
}

func (m *FindMaxNumberRequest) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type FindMaxNumberResponse struct {
	MaxNumber            int32    `protobuf:"varint,1,opt,name=max_number,json=maxNumber,proto3" json:"max_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMaxNumberResponse) Reset()         { *m = FindMaxNumberResponse{} }
func (m *FindMaxNumberResponse) String() string { return proto.CompactTextString(m) }
func (*FindMaxNumberResponse) ProtoMessage()    {}
func (*FindMaxNumberResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f89e07bb98a8bde8, []int{1}
}

func (m *FindMaxNumberResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMaxNumberResponse.Unmarshal(m, b)
}
func (m *FindMaxNumberResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMaxNumberResponse.Marshal(b, m, deterministic)
}
func (m *FindMaxNumberResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMaxNumberResponse.Merge(m, src)
}
func (m *FindMaxNumberResponse) XXX_Size() int {
	return xxx_messageInfo_FindMaxNumberResponse.Size(m)
}
func (m *FindMaxNumberResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMaxNumberResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindMaxNumberResponse proto.InternalMessageInfo

func (m *FindMaxNumberResponse) GetMaxNumber() int32 {
	if m != nil {
		return m.MaxNumber
	}
	return 0
}

func init() {
	proto.RegisterType((*FindMaxNumberRequest)(nil), "maxnumber.FindMaxNumberRequest")
	proto.RegisterType((*FindMaxNumberResponse)(nil), "maxnumber.FindMaxNumberResponse")
}

func init() { proto.RegisterFile("maxnumber.proto", fileDescriptor_f89e07bb98a8bde8) }

var fileDescriptor_f89e07bb98a8bde8 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0x4d, 0xac, 0xc8,
	0x2b, 0xcd, 0x4d, 0x4a, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0x4d, 0x65, 0xe4, 0x12, 0x71, 0xcb, 0xcc, 0x4b, 0xf1, 0x4d, 0xac, 0xf0, 0x03, 0x8b, 0x04, 0xa5,
	0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0xc9, 0x72, 0x71, 0x15, 0x94, 0x26, 0xe5, 0x64, 0x26, 0xc7,
	0x67, 0xa7, 0x56, 0x4a, 0x30, 0x29, 0x30, 0x6a, 0xf0, 0x04, 0x71, 0x42, 0x44, 0xbc, 0x53, 0x2b,
	0x85, 0xe4, 0xb9, 0xb8, 0x0b, 0x8a, 0x32, 0xcb, 0x12, 0x4b, 0x52, 0xc1, 0xf2, 0xcc, 0x60, 0x79,
	0x2e, 0xa8, 0x10, 0x54, 0x41, 0x72, 0x66, 0x41, 0x46, 0x6a, 0x51, 0x7c, 0x49, 0x6a, 0x45, 0x89,
	0x04, 0x0b, 0x44, 0x01, 0x44, 0x28, 0x24, 0xb5, 0xa2, 0x44, 0x48, 0x86, 0x8b, 0xb3, 0x38, 0x33,
	0x3d, 0x2f, 0xb1, 0xa4, 0xb4, 0x28, 0x55, 0x82, 0x15, 0x62, 0x3e, 0x5c, 0x40, 0xc9, 0x8c, 0x4b,
	0x14, 0xcd, 0x59, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x20, 0x77, 0xe5, 0x26, 0x56, 0xc4, 0x43,
	0x9c, 0x2f, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x1a, 0x04, 0xf2, 0x0f, 0x44, 0x99, 0x51, 0x2a, 0x17,
	0x27, 0x5c, 0x8f, 0x50, 0x04, 0x17, 0x2f, 0x8a, 0x21, 0x42, 0xf2, 0x7a, 0x88, 0xa0, 0xc0, 0xe6,
	0x6b, 0x29, 0x05, 0xdc, 0x0a, 0x20, 0xf6, 0x2b, 0x31, 0x68, 0x30, 0x1a, 0x30, 0x26, 0xb1, 0x81,
	0x03, 0xd2, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xd0, 0x36, 0xd7, 0x38, 0x5b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MaxNumberClient is the client API for MaxNumber service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MaxNumberClient interface {
	FindMaxNumber(ctx context.Context, opts ...grpc.CallOption) (MaxNumber_FindMaxNumberClient, error)
}

type maxNumberClient struct {
	cc *grpc.ClientConn
}

func NewMaxNumberClient(cc *grpc.ClientConn) MaxNumberClient {
	return &maxNumberClient{cc}
}

func (c *maxNumberClient) FindMaxNumber(ctx context.Context, opts ...grpc.CallOption) (MaxNumber_FindMaxNumberClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MaxNumber_serviceDesc.Streams[0], "/maxnumber.MaxNumber/FindMaxNumber", opts...)
	if err != nil {
		return nil, err
	}
	x := &maxNumberFindMaxNumberClient{stream}
	return x, nil
}

type MaxNumber_FindMaxNumberClient interface {
	Send(*FindMaxNumberRequest) error
	Recv() (*FindMaxNumberResponse, error)
	grpc.ClientStream
}

type maxNumberFindMaxNumberClient struct {
	grpc.ClientStream
}

func (x *maxNumberFindMaxNumberClient) Send(m *FindMaxNumberRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *maxNumberFindMaxNumberClient) Recv() (*FindMaxNumberResponse, error) {
	m := new(FindMaxNumberResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MaxNumberServer is the server API for MaxNumber service.
type MaxNumberServer interface {
	FindMaxNumber(MaxNumber_FindMaxNumberServer) error
}

func RegisterMaxNumberServer(s *grpc.Server, srv MaxNumberServer) {
	s.RegisterService(&_MaxNumber_serviceDesc, srv)
}

func _MaxNumber_FindMaxNumber_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MaxNumberServer).FindMaxNumber(&maxNumberFindMaxNumberServer{stream})
}

type MaxNumber_FindMaxNumberServer interface {
	Send(*FindMaxNumberResponse) error
	Recv() (*FindMaxNumberRequest, error)
	grpc.ServerStream
}

type maxNumberFindMaxNumberServer struct {
	grpc.ServerStream
}

func (x *maxNumberFindMaxNumberServer) Send(m *FindMaxNumberResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *maxNumberFindMaxNumberServer) Recv() (*FindMaxNumberRequest, error) {
	m := new(FindMaxNumberRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MaxNumber_serviceDesc = grpc.ServiceDesc{
	ServiceName: "maxnumber.MaxNumber",
	HandlerType: (*MaxNumberServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FindMaxNumber",
			Handler:       _MaxNumber_FindMaxNumber_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "maxnumber.proto",
}
